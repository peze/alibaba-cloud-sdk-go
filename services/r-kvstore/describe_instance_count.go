package r_kvstore

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeInstanceCount invokes the r_kvstore.DescribeInstanceCount API synchronously
// api document: https://help.aliyun.com/api/r-kvstore/describeinstancecount.html
func (client *Client) DescribeInstanceCount(request *DescribeInstanceCountRequest) (response *DescribeInstanceCountResponse, err error) {
	response = CreateDescribeInstanceCountResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeInstanceCountWithChan invokes the r_kvstore.DescribeInstanceCount API asynchronously
// api document: https://help.aliyun.com/api/r-kvstore/describeinstancecount.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeInstanceCountWithChan(request *DescribeInstanceCountRequest) (<-chan *DescribeInstanceCountResponse, <-chan error) {
	responseChan := make(chan *DescribeInstanceCountResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeInstanceCount(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeInstanceCountWithCallback invokes the r_kvstore.DescribeInstanceCount API asynchronously
// api document: https://help.aliyun.com/api/r-kvstore/describeinstancecount.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeInstanceCountWithCallback(request *DescribeInstanceCountRequest, callback func(response *DescribeInstanceCountResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeInstanceCountResponse
		var err error
		defer close(result)
		response, err = client.DescribeInstanceCount(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeInstanceCountRequest is the request struct for api DescribeInstanceCount
type DescribeInstanceCountRequest struct {
	*requests.RpcRequest
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount         string           `position:"Query" name:"OwnerAccount"`
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
	SecurityToken        string           `position:"Query" name:"SecurityToken"`
}

// DescribeInstanceCountResponse is the response struct for api DescribeInstanceCount
type DescribeInstanceCountResponse struct {
	*responses.BaseResponse
	RequestId      string `json:"RequestId" xml:"RequestId"`
	InstancesCount int    `json:"InstancesCount" xml:"InstancesCount"`
}

// CreateDescribeInstanceCountRequest creates a request to invoke DescribeInstanceCount API
func CreateDescribeInstanceCountRequest() (request *DescribeInstanceCountRequest) {
	request = &DescribeInstanceCountRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("R-kvstore", "2015-01-01", "DescribeInstanceCount", "", "")
	return
}

// CreateDescribeInstanceCountResponse creates a response to parse from DescribeInstanceCount response
func CreateDescribeInstanceCountResponse() (response *DescribeInstanceCountResponse) {
	response = &DescribeInstanceCountResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
