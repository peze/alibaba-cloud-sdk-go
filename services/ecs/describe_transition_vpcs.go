package ecs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeTransitionVpcs invokes the ecs.DescribeTransitionVpcs API synchronously
// api document: https://help.aliyun.com/api/ecs/describetransitionvpcs.html
func (client *Client) DescribeTransitionVpcs(request *DescribeTransitionVpcsRequest) (response *DescribeTransitionVpcsResponse, err error) {
	response = CreateDescribeTransitionVpcsResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeTransitionVpcsWithChan invokes the ecs.DescribeTransitionVpcs API asynchronously
// api document: https://help.aliyun.com/api/ecs/describetransitionvpcs.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeTransitionVpcsWithChan(request *DescribeTransitionVpcsRequest) (<-chan *DescribeTransitionVpcsResponse, <-chan error) {
	responseChan := make(chan *DescribeTransitionVpcsResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeTransitionVpcs(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeTransitionVpcsWithCallback invokes the ecs.DescribeTransitionVpcs API asynchronously
// api document: https://help.aliyun.com/api/ecs/describetransitionvpcs.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeTransitionVpcsWithCallback(request *DescribeTransitionVpcsRequest, callback func(response *DescribeTransitionVpcsResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeTransitionVpcsResponse
		var err error
		defer close(result)
		response, err = client.DescribeTransitionVpcs(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeTransitionVpcsRequest is the request struct for api DescribeTransitionVpcs
type DescribeTransitionVpcsRequest struct {
	*requests.RpcRequest
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount         string           `position:"Query" name:"OwnerAccount"`
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
	ResourceType         string           `position:"Query" name:"ResourceType"`
}

// DescribeTransitionVpcsResponse is the response struct for api DescribeTransitionVpcs
type DescribeTransitionVpcsResponse struct {
	*responses.BaseResponse
	RequestId string    `json:"RequestId" xml:"RequestId"`
	Code      string    `json:"Code" xml:"Code"`
	Success   bool      `json:"Success" xml:"Success"`
	VpcModels VpcModels `json:"VpcModels" xml:"VpcModels"`
}

// CreateDescribeTransitionVpcsRequest creates a request to invoke DescribeTransitionVpcs API
func CreateDescribeTransitionVpcsRequest() (request *DescribeTransitionVpcsRequest) {
	request = &DescribeTransitionVpcsRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Ecs", "2016-03-14", "DescribeTransitionVpcs", "", "")
	return
}

// CreateDescribeTransitionVpcsResponse creates a response to parse from DescribeTransitionVpcs response
func CreateDescribeTransitionVpcsResponse() (response *DescribeTransitionVpcsResponse) {
	response = &DescribeTransitionVpcsResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
