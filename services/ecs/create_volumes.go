
package ecs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// CreateVolumes invokes the ecs.CreateVolumes API synchronously
// api document: https://help.aliyun.com/api/ecs/createvolumes.html
func (client *Client) CreateVolumes(request *CreateVolumesRequest) (response *CreateVolumesResponse, err error) {
response = CreateCreateVolumesResponse()
err = client.DoAction(request, response)
return
}

// CreateVolumesWithChan invokes the ecs.CreateVolumes API asynchronously
// api document: https://help.aliyun.com/api/ecs/createvolumes.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateVolumesWithChan(request *CreateVolumesRequest) (<-chan *CreateVolumesResponse, <-chan error) {
responseChan := make(chan *CreateVolumesResponse, 1)
errChan := make(chan error, 1)
err := client.AddAsyncTask(func() {
defer close(responseChan)
defer close(errChan)
response, err :=  client.CreateVolumes(request)
if err != nil {
errChan <- err
} else {
responseChan <- response
}
})
if err != nil {
errChan <- err
close(responseChan)
close(errChan)
}
return responseChan, errChan
}

// CreateVolumesWithCallback invokes the ecs.CreateVolumes API asynchronously
// api document: https://help.aliyun.com/api/ecs/createvolumes.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateVolumesWithCallback(request *CreateVolumesRequest, callback func(response *CreateVolumesResponse, err error)) (<-chan int) {
result := make(chan int, 1)
err := client.AddAsyncTask(func() {
var response *CreateVolumesResponse
var err error
defer close(result)
response, err = client.CreateVolumes(request)
callback(response, err)
result <- 1
})
if err != nil {
defer close(result)
callback(nil, err)
result <- 0
}
return result
}

// CreateVolumesRequest is the request struct for api CreateVolumes
type CreateVolumesRequest struct {
*requests.RpcRequest
                    ResourceOwnerId     requests.Integer `position:"Query" name:"ResourceOwnerId"`
                    SnapshotId     string `position:"Query" name:"SnapshotId"`
                    ClientToken     string `position:"Query" name:"ClientToken"`
                    Description     string `position:"Query" name:"Description"`
                    VolumeCategory     string `position:"Query" name:"VolumeCategory"`
                    Tag  *[]CreateVolumesTag `position:"Query" name:"Tag"  type:"Repeated"`
                    Amount     requests.Integer `position:"Query" name:"Amount"`
                    VolumeName     string `position:"Query" name:"VolumeName"`
                    VolumeEncrypted     requests.Boolean `position:"Query" name:"VolumeEncrypted"`
                    ResourceOwnerAccount     string `position:"Query" name:"ResourceOwnerAccount"`
                    OwnerAccount     string `position:"Query" name:"OwnerAccount"`
                    OwnerId     requests.Integer `position:"Query" name:"OwnerId"`
                    Size     requests.Integer `position:"Query" name:"Size"`
                    ZoneId     string `position:"Query" name:"ZoneId"`
                    KMSKeyId     string `position:"Query" name:"KMSKeyId"`
}

// CreateVolumesTag is a repeated param struct in CreateVolumesRequest
type CreateVolumesTag struct{
        Value     string `name:"Value"`
        Key     string `name:"Key"`
}

// CreateVolumesResponse is the response struct for api CreateVolumes
type CreateVolumesResponse struct {
*responses.BaseResponse
            RequestId     string `json:"RequestId" xml:"RequestId"`
                VolumeIds VolumeIdsInCreateVolumes `json:"VolumeIds" xml:"VolumeIds"`
}

// CreateCreateVolumesRequest creates a request to invoke CreateVolumes API
func CreateCreateVolumesRequest() (request *CreateVolumesRequest) {
request = &CreateVolumesRequest{
RpcRequest: &requests.RpcRequest{},
}
request.InitWithApiInfo("Ecs", "2016-03-14", "CreateVolumes", "", "")
return
}

// CreateCreateVolumesResponse creates a response to parse from CreateVolumes response
func CreateCreateVolumesResponse() (response *CreateVolumesResponse) {
response = &CreateVolumesResponse{
BaseResponse: &responses.BaseResponse{},
}
return
}


