package ecs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// CreateDisks invokes the ecs.CreateDisks API synchronously
// api document: https://help.aliyun.com/api/ecs/createdisks.html
func (client *Client) CreateDisks(request *CreateDisksRequest) (response *CreateDisksResponse, err error) {
	response = CreateCreateDisksResponse()
	err = client.DoAction(request, response)
	return
}

// CreateDisksWithChan invokes the ecs.CreateDisks API asynchronously
// api document: https://help.aliyun.com/api/ecs/createdisks.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateDisksWithChan(request *CreateDisksRequest) (<-chan *CreateDisksResponse, <-chan error) {
	responseChan := make(chan *CreateDisksResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.CreateDisks(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// CreateDisksWithCallback invokes the ecs.CreateDisks API asynchronously
// api document: https://help.aliyun.com/api/ecs/createdisks.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateDisksWithCallback(request *CreateDisksRequest, callback func(response *CreateDisksResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *CreateDisksResponse
		var err error
		defer close(result)
		response, err = client.CreateDisks(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// CreateDisksRequest is the request struct for api CreateDisks
type CreateDisksRequest struct {
	*requests.RpcRequest
	ResourceOwnerId      requests.Integer  `position:"Query" name:"ResourceOwnerId"`
	SnapshotId           string            `position:"Query" name:"SnapshotId"`
	ClientToken          string            `position:"Query" name:"ClientToken"`
	Description          string            `position:"Query" name:"Description"`
	DiskName             string            `position:"Query" name:"DiskName"`
	ResourceGroupId      string            `position:"Query" name:"ResourceGroupId"`
	Tag                  *[]CreateDisksTag `position:"Query" name:"Tag"  type:"Repeated"`
	Amount               requests.Integer  `position:"Query" name:"Amount"`
	ResourceOwnerAccount string            `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount         string            `position:"Query" name:"OwnerAccount"`
	OwnerId              requests.Integer  `position:"Query" name:"OwnerId"`
	Size                 requests.Integer  `position:"Query" name:"Size"`
	Encrypted            requests.Boolean  `position:"Query" name:"Encrypted"`
	ZoneId               string            `position:"Query" name:"ZoneId"`
	Category             string            `position:"Query" name:"Category"`
	KMSKeyId             string            `position:"Query" name:"KMSKeyId"`
}

// CreateDisksTag is a repeated param struct in CreateDisksRequest
type CreateDisksTag struct {
	Value string `name:"Value"`
	Key   string `name:"Key"`
}

// CreateDisksResponse is the response struct for api CreateDisks
type CreateDisksResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
	DiskId    DiskId `json:"DiskId" xml:"DiskId"`
}

// CreateCreateDisksRequest creates a request to invoke CreateDisks API
func CreateCreateDisksRequest() (request *CreateDisksRequest) {
	request = &CreateDisksRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Ecs", "2016-03-14", "CreateDisks", "ecs", "openAPI")
	return
}

// CreateCreateDisksResponse creates a response to parse from CreateDisks response
func CreateCreateDisksResponse() (response *CreateDisksResponse) {
	response = &CreateDisksResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
