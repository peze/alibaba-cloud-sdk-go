
package ecs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// RunInstances_GatedLaunch invokes the ecs.RunInstances_GatedLaunch API synchronously
// api document: https://help.aliyun.com/api/ecs/runinstances_gatedlaunch.html
func (client *Client) RunInstances_GatedLaunch(request *RunInstances_GatedLaunchRequest) (response *RunInstances_GatedLaunchResponse, err error) {
response = CreateRunInstances_GatedLaunchResponse()
err = client.DoAction(request, response)
return
}

// RunInstances_GatedLaunchWithChan invokes the ecs.RunInstances_GatedLaunch API asynchronously
// api document: https://help.aliyun.com/api/ecs/runinstances_gatedlaunch.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) RunInstances_GatedLaunchWithChan(request *RunInstances_GatedLaunchRequest) (<-chan *RunInstances_GatedLaunchResponse, <-chan error) {
responseChan := make(chan *RunInstances_GatedLaunchResponse, 1)
errChan := make(chan error, 1)
err := client.AddAsyncTask(func() {
defer close(responseChan)
defer close(errChan)
response, err :=  client.RunInstances_GatedLaunch(request)
if err != nil {
errChan <- err
} else {
responseChan <- response
}
})
if err != nil {
errChan <- err
close(responseChan)
close(errChan)
}
return responseChan, errChan
}

// RunInstances_GatedLaunchWithCallback invokes the ecs.RunInstances_GatedLaunch API asynchronously
// api document: https://help.aliyun.com/api/ecs/runinstances_gatedlaunch.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) RunInstances_GatedLaunchWithCallback(request *RunInstances_GatedLaunchRequest, callback func(response *RunInstances_GatedLaunchResponse, err error)) (<-chan int) {
result := make(chan int, 1)
err := client.AddAsyncTask(func() {
var response *RunInstances_GatedLaunchResponse
var err error
defer close(result)
response, err = client.RunInstances_GatedLaunch(request)
callback(response, err)
result <- 1
})
if err != nil {
defer close(result)
callback(nil, err)
result <- 0
}
return result
}

// RunInstances_GatedLaunchRequest is the request struct for api RunInstances_GatedLaunch
type RunInstances_GatedLaunchRequest struct {
*requests.RpcRequest
                    ResourceOwnerId     requests.Integer `position:"Query" name:"ResourceOwnerId"`
                    NetworkType     string `position:"Query" name:"NetworkType"`
                    MinAmount     requests.Integer `position:"Query" name:"MinAmount"`
                    HostName     string `position:"Query" name:"HostName"`
                    Password     string `position:"Query" name:"Password"`
                    Tag  *[]RunInstances_GatedLaunchTag `position:"Query" name:"Tag"  type:"Repeated"`
                    BusinessInfo     string `position:"Query" name:"BusinessInfo"`
                    NodeControllerId     string `position:"Query" name:"NodeControllerId"`
                    FromApp     string `position:"Query" name:"FromApp"`
                    MaxAmount     requests.Integer `position:"Query" name:"MaxAmount"`
                    OwnerId     requests.Integer `position:"Query" name:"OwnerId"`
                    VSwitchId     string `position:"Query" name:"VSwitchId"`
                    SpotStrategy     string `position:"Query" name:"SpotStrategy"`
                    InstanceName     string `position:"Query" name:"InstanceName"`
                    InternetChargeType     string `position:"Query" name:"InternetChargeType"`
                    ZoneId     string `position:"Query" name:"ZoneId"`
                    InternetMaxBandwidthIn     requests.Integer `position:"Query" name:"InternetMaxBandwidthIn"`
                    ImageId     string `position:"Query" name:"ImageId"`
                    ClientToken     string `position:"Query" name:"ClientToken"`
                    IoOptimized     string `position:"Query" name:"IoOptimized"`
                    InternetMaxBandwidthOut     requests.Integer `position:"Query" name:"InternetMaxBandwidthOut"`
                    SecurityGroupId     string `position:"Query" name:"SecurityGroupId"`
                    Description     string `position:"Query" name:"Description"`
                    SystemDiskCategory     string `position:"Query" name:"SystemDisk.Category"`
                    UserData     string `position:"Query" name:"UserData"`
                    InstanceType     string `position:"Query" name:"InstanceType"`
                    ResourceOwnerAccount     string `position:"Query" name:"ResourceOwnerAccount"`
                    OwnerAccount     string `position:"Query" name:"OwnerAccount"`
                    SystemDiskDiskName     string `position:"Query" name:"SystemDisk.DiskName"`
                    AutoReleaseTime     string `position:"Query" name:"AutoReleaseTime"`
                    RelationOrderId     string `position:"Query" name:"RelationOrderId"`
                    ClusterId     string `position:"Query" name:"ClusterId"`
                    DataDisk  *[]RunInstances_GatedLaunchDataDisk `position:"Query" name:"DataDisk"  type:"Repeated"`
                    SystemDiskSize     string `position:"Query" name:"SystemDisk.Size"`
                    DefaultVpc     string `position:"Query" name:"DefaultVpc"`
                    SystemDiskDescription     string `position:"Query" name:"SystemDisk.Description"`
}

// RunInstances_GatedLaunchTag is a repeated param struct in RunInstances_GatedLaunchRequest
type RunInstances_GatedLaunchTag struct{
        Value     string `name:"Value"`
        Key     string `name:"Key"`
}
// RunInstances_GatedLaunchDataDisk is a repeated param struct in RunInstances_GatedLaunchRequest
type RunInstances_GatedLaunchDataDisk struct{
        DiskName     string `name:"DiskName"`
        SnapshotId     string `name:"SnapshotId"`
        Size     string `name:"Size"`
        Description     string `name:"Description"`
        Category     string `name:"Category"`
        Device     string `name:"Device"`
        DeleteWithInstance     string `name:"DeleteWithInstance"`
}

// RunInstances_GatedLaunchResponse is the response struct for api RunInstances_GatedLaunch
type RunInstances_GatedLaunchResponse struct {
*responses.BaseResponse
            RequestId     string `json:"RequestId" xml:"RequestId"`
            TaskId     string `json:"TaskId" xml:"TaskId"`
                InstanceIdSets InstanceIdSetsInRunInstancesGatedLaunch `json:"InstanceIdSets" xml:"InstanceIdSets"`
}

// CreateRunInstances_GatedLaunchRequest creates a request to invoke RunInstances_GatedLaunch API
func CreateRunInstances_GatedLaunchRequest() (request *RunInstances_GatedLaunchRequest) {
request = &RunInstances_GatedLaunchRequest{
RpcRequest: &requests.RpcRequest{},
}
request.InitWithApiInfo("Ecs", "2016-03-14", "RunInstances_GatedLaunch", "", "")
return
}

// CreateRunInstances_GatedLaunchResponse creates a response to parse from RunInstances_GatedLaunch response
func CreateRunInstances_GatedLaunchResponse() (response *RunInstances_GatedLaunchResponse) {
response = &RunInstances_GatedLaunchResponse{
BaseResponse: &responses.BaseResponse{},
}
return
}


