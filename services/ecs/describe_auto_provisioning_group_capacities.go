package ecs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeAutoProvisioningGroupCapacities invokes the ecs.DescribeAutoProvisioningGroupCapacities API synchronously
// api document: https://help.aliyun.com/api/ecs/describeautoprovisioninggroupcapacities.html
func (client *Client) DescribeAutoProvisioningGroupCapacities(request *DescribeAutoProvisioningGroupCapacitiesRequest) (response *DescribeAutoProvisioningGroupCapacitiesResponse, err error) {
	response = CreateDescribeAutoProvisioningGroupCapacitiesResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeAutoProvisioningGroupCapacitiesWithChan invokes the ecs.DescribeAutoProvisioningGroupCapacities API asynchronously
// api document: https://help.aliyun.com/api/ecs/describeautoprovisioninggroupcapacities.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeAutoProvisioningGroupCapacitiesWithChan(request *DescribeAutoProvisioningGroupCapacitiesRequest) (<-chan *DescribeAutoProvisioningGroupCapacitiesResponse, <-chan error) {
	responseChan := make(chan *DescribeAutoProvisioningGroupCapacitiesResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeAutoProvisioningGroupCapacities(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeAutoProvisioningGroupCapacitiesWithCallback invokes the ecs.DescribeAutoProvisioningGroupCapacities API asynchronously
// api document: https://help.aliyun.com/api/ecs/describeautoprovisioninggroupcapacities.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeAutoProvisioningGroupCapacitiesWithCallback(request *DescribeAutoProvisioningGroupCapacitiesRequest, callback func(response *DescribeAutoProvisioningGroupCapacitiesResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeAutoProvisioningGroupCapacitiesResponse
		var err error
		defer close(result)
		response, err = client.DescribeAutoProvisioningGroupCapacities(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeAutoProvisioningGroupCapacitiesRequest is the request struct for api DescribeAutoProvisioningGroupCapacities
type DescribeAutoProvisioningGroupCapacitiesRequest struct {
	*requests.RpcRequest
	ResourceOwnerId         requests.Integer `position:"Query" name:"ResourceOwnerId"`
	ResourceOwnerAccount    string           `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount            string           `position:"Query" name:"OwnerAccount"`
	OwnerId                 requests.Integer `position:"Query" name:"OwnerId"`
	AutoProvisioningGroupId *[]string        `position:"Query" name:"AutoProvisioningGroupId"  type:"Repeated"`
}

// DescribeAutoProvisioningGroupCapacitiesResponse is the response struct for api DescribeAutoProvisioningGroupCapacities
type DescribeAutoProvisioningGroupCapacitiesResponse struct {
	*responses.BaseResponse
	RequestId  string     `json:"RequestId" xml:"RequestId"`
	Code       string     `json:"Code" xml:"Code"`
	Message    string     `json:"Message" xml:"Message"`
	Success    bool       `json:"Success" xml:"Success"`
	Capacities Capacities `json:"Capacities" xml:"Capacities"`
}

// CreateDescribeAutoProvisioningGroupCapacitiesRequest creates a request to invoke DescribeAutoProvisioningGroupCapacities API
func CreateDescribeAutoProvisioningGroupCapacitiesRequest() (request *DescribeAutoProvisioningGroupCapacitiesRequest) {
	request = &DescribeAutoProvisioningGroupCapacitiesRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Ecs", "2016-03-14", "DescribeAutoProvisioningGroupCapacities", "", "")
	return
}

// CreateDescribeAutoProvisioningGroupCapacitiesResponse creates a response to parse from DescribeAutoProvisioningGroupCapacities response
func CreateDescribeAutoProvisioningGroupCapacitiesResponse() (response *DescribeAutoProvisioningGroupCapacitiesResponse) {
	response = &DescribeAutoProvisioningGroupCapacitiesResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
