package ecs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeResourceAllocation invokes the ecs.DescribeResourceAllocation API synchronously
// api document: https://help.aliyun.com/api/ecs/describeresourceallocation.html
func (client *Client) DescribeResourceAllocation(request *DescribeResourceAllocationRequest) (response *DescribeResourceAllocationResponse, err error) {
	response = CreateDescribeResourceAllocationResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeResourceAllocationWithChan invokes the ecs.DescribeResourceAllocation API asynchronously
// api document: https://help.aliyun.com/api/ecs/describeresourceallocation.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeResourceAllocationWithChan(request *DescribeResourceAllocationRequest) (<-chan *DescribeResourceAllocationResponse, <-chan error) {
	responseChan := make(chan *DescribeResourceAllocationResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeResourceAllocation(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeResourceAllocationWithCallback invokes the ecs.DescribeResourceAllocation API asynchronously
// api document: https://help.aliyun.com/api/ecs/describeresourceallocation.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeResourceAllocationWithCallback(request *DescribeResourceAllocationRequest, callback func(response *DescribeResourceAllocationResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeResourceAllocationResponse
		var err error
		defer close(result)
		response, err = client.DescribeResourceAllocation(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeResourceAllocationRequest is the request struct for api DescribeResourceAllocation
type DescribeResourceAllocationRequest struct {
	*requests.RpcRequest
	ResourceOwnerId               requests.Integer                               `position:"Query" name:"ResourceOwnerId"`
	Memory                        requests.Float                                 `position:"Query" name:"Memory"`
	IoOptimized                   string                                         `position:"Query" name:"IoOptimized"`
	InstancePps                   requests.Integer                               `position:"Query" name:"InstancePps"`
	ResourceAmountType            string                                         `position:"Query" name:"ResourceAmountType"`
	NetworkType                   string                                         `position:"Query" name:"NetworkType"`
	PostPaidBaseCapacity          requests.Integer                               `position:"Query" name:"PostPaidBaseCapacity"`
	Cores                         requests.Integer                               `position:"Query" name:"Cores"`
	SystemDiskCategory            string                                         `position:"Query" name:"SystemDiskCategory"`
	DefaultTargetCapacityType     string                                         `position:"Query" name:"DefaultTargetCapacityType"`
	InstanceBandwidth             requests.Integer                               `position:"Query" name:"InstanceBandwidth"`
	MaxPrice                      requests.Float                                 `position:"Query" name:"MaxPrice"`
	ResourceOwnerAccount          string                                         `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount                  string                                         `position:"Query" name:"OwnerAccount"`
	SpotBaseCapacity              requests.Integer                               `position:"Query" name:"SpotBaseCapacity"`
	SpotInstancePools             requests.Integer                               `position:"Query" name:"SpotInstancePools"`
	InstanceTypeFamily            *[]string                                      `position:"Query" name:"InstanceTypeFamily"  type:"Repeated"`
	OwnerId                       requests.Integer                               `position:"Query" name:"OwnerId"`
	SpotStrategy                  string                                         `position:"Query" name:"SpotStrategy"`
	PriorityStrategy              string                                         `position:"Query" name:"PriorityStrategy"`
	ZoneId                        *[]string                                      `position:"Query" name:"ZoneId"  type:"Repeated"`
	InstanceTypeModel             *[]DescribeResourceAllocationInstanceTypeModel `position:"Query" name:"InstanceTypeModel"  type:"Repeated"`
	TargetCapacity                requests.Integer                               `position:"Query" name:"TargetCapacity"`
	StrictSatisfiedTargetCapacity requests.Boolean                               `position:"Query" name:"StrictSatisfiedTargetCapacity"`
}

// DescribeResourceAllocationInstanceTypeModel is a repeated param struct in DescribeResourceAllocationRequest
type DescribeResourceAllocationInstanceTypeModel struct {
	SpotStrategy string `name:"SpotStrategy"`
	MaxPrice     string `name:"MaxPrice"`
	InstanceType string `name:"InstanceType"`
}

// DescribeResourceAllocationResponse is the response struct for api DescribeResourceAllocation
type DescribeResourceAllocationResponse struct {
	*responses.BaseResponse
	RequestId                string                   `json:"RequestId" xml:"RequestId"`
	ResourcePlanningResponse ResourcePlanningResponse `json:"ResourcePlanningResponse" xml:"ResourcePlanningResponse"`
}

// CreateDescribeResourceAllocationRequest creates a request to invoke DescribeResourceAllocation API
func CreateDescribeResourceAllocationRequest() (request *DescribeResourceAllocationRequest) {
	request = &DescribeResourceAllocationRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Ecs", "2016-03-14", "DescribeResourceAllocation", "", "")
	return
}

// CreateDescribeResourceAllocationResponse creates a response to parse from DescribeResourceAllocation response
func CreateDescribeResourceAllocationResponse() (response *DescribeResourceAllocationResponse) {
	response = &DescribeResourceAllocationResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
