package ecs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeInstanceAutoRebootTime invokes the ecs.DescribeInstanceAutoRebootTime API synchronously
// api document: https://help.aliyun.com/api/ecs/describeinstanceautoreboottime.html
func (client *Client) DescribeInstanceAutoRebootTime(request *DescribeInstanceAutoRebootTimeRequest) (response *DescribeInstanceAutoRebootTimeResponse, err error) {
	response = CreateDescribeInstanceAutoRebootTimeResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeInstanceAutoRebootTimeWithChan invokes the ecs.DescribeInstanceAutoRebootTime API asynchronously
// api document: https://help.aliyun.com/api/ecs/describeinstanceautoreboottime.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeInstanceAutoRebootTimeWithChan(request *DescribeInstanceAutoRebootTimeRequest) (<-chan *DescribeInstanceAutoRebootTimeResponse, <-chan error) {
	responseChan := make(chan *DescribeInstanceAutoRebootTimeResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeInstanceAutoRebootTime(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeInstanceAutoRebootTimeWithCallback invokes the ecs.DescribeInstanceAutoRebootTime API asynchronously
// api document: https://help.aliyun.com/api/ecs/describeinstanceautoreboottime.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeInstanceAutoRebootTimeWithCallback(request *DescribeInstanceAutoRebootTimeRequest, callback func(response *DescribeInstanceAutoRebootTimeResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeInstanceAutoRebootTimeResponse
		var err error
		defer close(result)
		response, err = client.DescribeInstanceAutoRebootTime(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeInstanceAutoRebootTimeRequest is the request struct for api DescribeInstanceAutoRebootTime
type DescribeInstanceAutoRebootTimeRequest struct {
	*requests.RpcRequest
	AutoRebootTimeTo     string           `position:"Query" name:"AutoRebootTimeTo"`
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	AutoRebootTimeFrom   string           `position:"Query" name:"AutoRebootTimeFrom"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
	InstanceIds          *[]string        `position:"Query" name:"InstanceIds"  type:"Repeated"`
}

// DescribeInstanceAutoRebootTimeResponse is the response struct for api DescribeInstanceAutoRebootTime
type DescribeInstanceAutoRebootTimeResponse struct {
	*responses.BaseResponse
	RequestId       string          `json:"RequestId" xml:"RequestId"`
	AutoRebootInfos AutoRebootInfos `json:"AutoRebootInfos" xml:"AutoRebootInfos"`
}

// CreateDescribeInstanceAutoRebootTimeRequest creates a request to invoke DescribeInstanceAutoRebootTime API
func CreateDescribeInstanceAutoRebootTimeRequest() (request *DescribeInstanceAutoRebootTimeRequest) {
	request = &DescribeInstanceAutoRebootTimeRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Ecs", "2016-03-14", "DescribeInstanceAutoRebootTime", "ecs", "openAPI")
	return
}

// CreateDescribeInstanceAutoRebootTimeResponse creates a response to parse from DescribeInstanceAutoRebootTime response
func CreateDescribeInstanceAutoRebootTimeResponse() (response *DescribeInstanceAutoRebootTimeResponse) {
	response = &DescribeInstanceAutoRebootTimeResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
