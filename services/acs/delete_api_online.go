package acs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DeleteApiOnline invokes the acs.DeleteApiOnline API synchronously
// api document: https://help.aliyun.com/api/acs/deleteapionline.html
func (client *Client) DeleteApiOnline(request *DeleteApiOnlineRequest) (response *DeleteApiOnlineResponse, err error) {
	response = CreateDeleteApiOnlineResponse()
	err = client.DoAction(request, response)
	return
}

// DeleteApiOnlineWithChan invokes the acs.DeleteApiOnline API asynchronously
// api document: https://help.aliyun.com/api/acs/deleteapionline.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DeleteApiOnlineWithChan(request *DeleteApiOnlineRequest) (<-chan *DeleteApiOnlineResponse, <-chan error) {
	responseChan := make(chan *DeleteApiOnlineResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DeleteApiOnline(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DeleteApiOnlineWithCallback invokes the acs.DeleteApiOnline API asynchronously
// api document: https://help.aliyun.com/api/acs/deleteapionline.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DeleteApiOnlineWithCallback(request *DeleteApiOnlineRequest, callback func(response *DeleteApiOnlineResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DeleteApiOnlineResponse
		var err error
		defer close(result)
		response, err = client.DeleteApiOnline(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DeleteApiOnlineRequest is the request struct for api DeleteApiOnline
type DeleteApiOnlineRequest struct {
	*requests.RoaRequest
	Environment string `position:"Query" name:"Environment"`
	Name        string `position:"Query" name:"Name"`
	ProductName string `position:"Query" name:"ProductName"`
	VersionName string `position:"Query" name:"VersionName"`
}

// DeleteApiOnlineResponse is the response struct for api DeleteApiOnline
type DeleteApiOnlineResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
}

// CreateDeleteApiOnlineRequest creates a request to invoke DeleteApiOnline API
func CreateDeleteApiOnlineRequest() (request *DeleteApiOnlineRequest) {
	request = &DeleteApiOnlineRequest{
		RoaRequest: &requests.RoaRequest{},
	}
	request.InitWithApiInfo("Acs", "2015-01-01", "DeleteApiOnline", "/deleteApiOnline", "12334", "openAPI")
	request.Method = requests.POST
	return
}

// CreateDeleteApiOnlineResponse creates a response to parse from DeleteApiOnline response
func CreateDeleteApiOnlineResponse() (response *DeleteApiOnlineResponse) {
	response = &DeleteApiOnlineResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
