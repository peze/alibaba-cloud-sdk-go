package acs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// ResumePurchasedApi invokes the acs.ResumePurchasedApi API synchronously
// api document: https://help.aliyun.com/api/acs/resumepurchasedapi.html
func (client *Client) ResumePurchasedApi(request *ResumePurchasedApiRequest) (response *ResumePurchasedApiResponse, err error) {
	response = CreateResumePurchasedApiResponse()
	err = client.DoAction(request, response)
	return
}

// ResumePurchasedApiWithChan invokes the acs.ResumePurchasedApi API asynchronously
// api document: https://help.aliyun.com/api/acs/resumepurchasedapi.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ResumePurchasedApiWithChan(request *ResumePurchasedApiRequest) (<-chan *ResumePurchasedApiResponse, <-chan error) {
	responseChan := make(chan *ResumePurchasedApiResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ResumePurchasedApi(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// ResumePurchasedApiWithCallback invokes the acs.ResumePurchasedApi API asynchronously
// api document: https://help.aliyun.com/api/acs/resumepurchasedapi.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ResumePurchasedApiWithCallback(request *ResumePurchasedApiRequest, callback func(response *ResumePurchasedApiResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ResumePurchasedApiResponse
		var err error
		defer close(result)
		response, err = client.ResumePurchasedApi(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// ResumePurchasedApiRequest is the request struct for api ResumePurchasedApi
type ResumePurchasedApiRequest struct {
	*requests.RoaRequest
	PurchaseProduct string `position:"Query" name:"PurchaseProduct"`
	Channel         string `position:"Query" name:"Channel"`
	PurchaseVersion string `position:"Query" name:"PurchaseVersion"`
	PurchaseApiName string `position:"Query" name:"PurchaseApiName"`
}

// ResumePurchasedApiResponse is the response struct for api ResumePurchasedApi
type ResumePurchasedApiResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
}

// CreateResumePurchasedApiRequest creates a request to invoke ResumePurchasedApi API
func CreateResumePurchasedApiRequest() (request *ResumePurchasedApiRequest) {
	request = &ResumePurchasedApiRequest{
		RoaRequest: &requests.RoaRequest{},
	}
	request.InitWithApiInfo("Acs", "2015-01-01", "ResumePurchasedApi", "/Api/ResumePurchasedApi", "12334", "openAPI")
	request.Method = requests.POST
	return
}

// CreateResumePurchasedApiResponse creates a response to parse from ResumePurchasedApi response
func CreateResumePurchasedApiResponse() (response *ResumePurchasedApiResponse) {
	response = &ResumePurchasedApiResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
