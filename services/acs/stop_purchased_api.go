package acs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// StopPurchasedApi invokes the acs.StopPurchasedApi API synchronously
// api document: https://help.aliyun.com/api/acs/stoppurchasedapi.html
func (client *Client) StopPurchasedApi(request *StopPurchasedApiRequest) (response *StopPurchasedApiResponse, err error) {
	response = CreateStopPurchasedApiResponse()
	err = client.DoAction(request, response)
	return
}

// StopPurchasedApiWithChan invokes the acs.StopPurchasedApi API asynchronously
// api document: https://help.aliyun.com/api/acs/stoppurchasedapi.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) StopPurchasedApiWithChan(request *StopPurchasedApiRequest) (<-chan *StopPurchasedApiResponse, <-chan error) {
	responseChan := make(chan *StopPurchasedApiResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.StopPurchasedApi(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// StopPurchasedApiWithCallback invokes the acs.StopPurchasedApi API asynchronously
// api document: https://help.aliyun.com/api/acs/stoppurchasedapi.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) StopPurchasedApiWithCallback(request *StopPurchasedApiRequest, callback func(response *StopPurchasedApiResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *StopPurchasedApiResponse
		var err error
		defer close(result)
		response, err = client.StopPurchasedApi(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// StopPurchasedApiRequest is the request struct for api StopPurchasedApi
type StopPurchasedApiRequest struct {
	*requests.RoaRequest
	PurchaseProduct string `position:"Query" name:"PurchaseProduct"`
	Channel         string `position:"Query" name:"Channel"`
	PurchaseVersion string `position:"Query" name:"PurchaseVersion"`
	PurchaseApiName string `position:"Query" name:"PurchaseApiName"`
}

// StopPurchasedApiResponse is the response struct for api StopPurchasedApi
type StopPurchasedApiResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
}

// CreateStopPurchasedApiRequest creates a request to invoke StopPurchasedApi API
func CreateStopPurchasedApiRequest() (request *StopPurchasedApiRequest) {
	request = &StopPurchasedApiRequest{
		RoaRequest: &requests.RoaRequest{},
	}
	request.InitWithApiInfo("Acs", "2015-01-01", "StopPurchasedApi", "/Api/StopPurchasedApi", "dsafsd", "openAPI")
	request.Method = requests.POST
	return
}

// CreateStopPurchasedApiResponse creates a response to parse from StopPurchasedApi response
func CreateStopPurchasedApiResponse() (response *StopPurchasedApiResponse) {
	response = &StopPurchasedApiResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
