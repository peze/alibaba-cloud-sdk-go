
package acs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// GetProductDocument invokes the acs.GetProductDocument API synchronously
// api document: https://help.aliyun.com/api/acs/getproductdocument.html
func (client *Client) GetProductDocument(request *GetProductDocumentRequest) (response *GetProductDocumentResponse, err error) {
response = CreateGetProductDocumentResponse()
err = client.DoAction(request, response)
return
}

// GetProductDocumentWithChan invokes the acs.GetProductDocument API asynchronously
// api document: https://help.aliyun.com/api/acs/getproductdocument.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) GetProductDocumentWithChan(request *GetProductDocumentRequest) (<-chan *GetProductDocumentResponse, <-chan error) {
responseChan := make(chan *GetProductDocumentResponse, 1)
errChan := make(chan error, 1)
err := client.AddAsyncTask(func() {
defer close(responseChan)
defer close(errChan)
response, err :=  client.GetProductDocument(request)
if err != nil {
errChan <- err
} else {
responseChan <- response
}
})
if err != nil {
errChan <- err
close(responseChan)
close(errChan)
}
return responseChan, errChan
}

// GetProductDocumentWithCallback invokes the acs.GetProductDocument API asynchronously
// api document: https://help.aliyun.com/api/acs/getproductdocument.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) GetProductDocumentWithCallback(request *GetProductDocumentRequest, callback func(response *GetProductDocumentResponse, err error)) (<-chan int) {
result := make(chan int, 1)
err := client.AddAsyncTask(func() {
var response *GetProductDocumentResponse
var err error
defer close(result)
response, err = client.GetProductDocument(request)
callback(response, err)
result <- 1
})
if err != nil {
defer close(result)
callback(nil, err)
result <- 0
}
return result
}

// GetProductDocumentRequest is the request struct for api GetProductDocument
type GetProductDocumentRequest struct {
*requests.RoaRequest
                    Site     string `position:"Path" name:"Site"`
                    IsDraft     requests.Boolean `position:"Path" name:"IsDraft"`
                    ProductName     string `position:"Path" name:"ProductName"`
                    Language     string `position:"Path" name:"Language"`
                    Accept     string `position:"Header" name:"Accept"`
}


// GetProductDocumentResponse is the response struct for api GetProductDocument
type GetProductDocumentResponse struct {
*responses.BaseResponse
            Product     string `json:"product" xml:"product"`
            Title     string `json:"title" xml:"title"`
            Language     string `json:"language" xml:"language"`
            Site     string `json:"site" xml:"site"`
            UseRam     bool `json:"useRam" xml:"useRam"`
            RamDescription     bool `json:"RamDescription" xml:"RamDescription"`
            Description     string `json:"Description" xml:"Description"`
                    DomainDocList DomainDocListInGetProductDocument `json:"DomainDocList" xml:"DomainDocList"`
}

// CreateGetProductDocumentRequest creates a request to invoke GetProductDocument API
func CreateGetProductDocumentRequest() (request *GetProductDocumentRequest) {
request = &GetProductDocumentRequest{
RoaRequest: &requests.RoaRequest{},
}
request.InitWithApiInfo("Acs", "2015-01-01", "GetProductDocument", "/ProductDocument/[ProductName]/[Language]/[Site]/[IsDraft]", "", "")
request.Method = requests.GET
return
}

// CreateGetProductDocumentResponse creates a response to parse from GetProductDocument response
func CreateGetProductDocumentResponse() (response *GetProductDocumentResponse) {
response = &GetProductDocumentResponse{
BaseResponse: &responses.BaseResponse{},
}
return
}


