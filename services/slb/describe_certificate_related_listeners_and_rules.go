package slb

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeCertificateRelatedListenersAndRules invokes the slb.DescribeCertificateRelatedListenersAndRules API synchronously
// api document: https://help.aliyun.com/api/slb/describecertificaterelatedlistenersandrules.html
func (client *Client) DescribeCertificateRelatedListenersAndRules(request *DescribeCertificateRelatedListenersAndRulesRequest) (response *DescribeCertificateRelatedListenersAndRulesResponse, err error) {
	response = CreateDescribeCertificateRelatedListenersAndRulesResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeCertificateRelatedListenersAndRulesWithChan invokes the slb.DescribeCertificateRelatedListenersAndRules API asynchronously
// api document: https://help.aliyun.com/api/slb/describecertificaterelatedlistenersandrules.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeCertificateRelatedListenersAndRulesWithChan(request *DescribeCertificateRelatedListenersAndRulesRequest) (<-chan *DescribeCertificateRelatedListenersAndRulesResponse, <-chan error) {
	responseChan := make(chan *DescribeCertificateRelatedListenersAndRulesResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeCertificateRelatedListenersAndRules(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeCertificateRelatedListenersAndRulesWithCallback invokes the slb.DescribeCertificateRelatedListenersAndRules API asynchronously
// api document: https://help.aliyun.com/api/slb/describecertificaterelatedlistenersandrules.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeCertificateRelatedListenersAndRulesWithCallback(request *DescribeCertificateRelatedListenersAndRulesRequest, callback func(response *DescribeCertificateRelatedListenersAndRulesResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeCertificateRelatedListenersAndRulesResponse
		var err error
		defer close(result)
		response, err = client.DescribeCertificateRelatedListenersAndRules(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeCertificateRelatedListenersAndRulesRequest is the request struct for api DescribeCertificateRelatedListenersAndRules
type DescribeCertificateRelatedListenersAndRulesRequest struct {
	*requests.RpcRequest
	AccessKeyId          string           `position:"Query" name:"access_key_id"`
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount         string           `position:"Query" name:"OwnerAccount"`
	CertificateId        string           `position:"Query" name:"CertificateId"`
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
}

// DescribeCertificateRelatedListenersAndRulesResponse is the response struct for api DescribeCertificateRelatedListenersAndRules
type DescribeCertificateRelatedListenersAndRulesResponse struct {
	*responses.BaseResponse
	RequestId string                                             `json:"RequestId" xml:"RequestId"`
	Listeners Listeners                                          `json:"Listeners" xml:"Listeners"`
	Rules     RulesInDescribeCertificateRelatedListenersAndRules `json:"Rules" xml:"Rules"`
}

// CreateDescribeCertificateRelatedListenersAndRulesRequest creates a request to invoke DescribeCertificateRelatedListenersAndRules API
func CreateDescribeCertificateRelatedListenersAndRulesRequest() (request *DescribeCertificateRelatedListenersAndRulesRequest) {
	request = &DescribeCertificateRelatedListenersAndRulesRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Slb", "2014-05-15", "DescribeCertificateRelatedListenersAndRules", "slb", "openAPI")
	return
}

// CreateDescribeCertificateRelatedListenersAndRulesResponse creates a response to parse from DescribeCertificateRelatedListenersAndRules response
func CreateDescribeCertificateRelatedListenersAndRulesResponse() (response *DescribeCertificateRelatedListenersAndRulesResponse) {
	response = &DescribeCertificateRelatedListenersAndRulesResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
