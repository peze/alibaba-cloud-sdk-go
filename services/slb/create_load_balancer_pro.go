package slb

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// CreateLoadBalancerPro invokes the slb.CreateLoadBalancerPro API synchronously
// api document: https://help.aliyun.com/api/slb/createloadbalancerpro.html
func (client *Client) CreateLoadBalancerPro(request *CreateLoadBalancerProRequest) (response *CreateLoadBalancerProResponse, err error) {
	response = CreateCreateLoadBalancerProResponse()
	err = client.DoAction(request, response)
	return
}

// CreateLoadBalancerProWithChan invokes the slb.CreateLoadBalancerPro API asynchronously
// api document: https://help.aliyun.com/api/slb/createloadbalancerpro.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateLoadBalancerProWithChan(request *CreateLoadBalancerProRequest) (<-chan *CreateLoadBalancerProResponse, <-chan error) {
	responseChan := make(chan *CreateLoadBalancerProResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.CreateLoadBalancerPro(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// CreateLoadBalancerProWithCallback invokes the slb.CreateLoadBalancerPro API asynchronously
// api document: https://help.aliyun.com/api/slb/createloadbalancerpro.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateLoadBalancerProWithCallback(request *CreateLoadBalancerProRequest, callback func(response *CreateLoadBalancerProResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *CreateLoadBalancerProResponse
		var err error
		defer close(result)
		response, err = client.CreateLoadBalancerPro(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// CreateLoadBalancerProRequest is the request struct for api CreateLoadBalancerPro
type CreateLoadBalancerProRequest struct {
	*requests.RpcRequest
	AccessKeyId          string           `position:"Query" name:"access_key_id"`
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	Address              string           `position:"Query" name:"Address"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	Bandwidth            requests.Integer `position:"Query" name:"Bandwidth"`
	ClientToken          string           `position:"Query" name:"ClientToken"`
	OwnerAccount         string           `position:"Query" name:"OwnerAccount"`
	LoadBalancerMode     string           `position:"Query" name:"LoadBalancerMode"`
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
	SuName               string           `position:"Query" name:"SuName"`
	MasterZoneId         string           `position:"Query" name:"MasterZoneId"`
	VSwitchId            string           `position:"Query" name:"VSwitchId"`
	LoadBalancerName     string           `position:"Query" name:"LoadBalancerName"`
	InternetChargeType   string           `position:"Query" name:"InternetChargeType"`
	VpcId                string           `position:"Query" name:"VpcId"`
	AddressType          string           `position:"Query" name:"AddressType"`
	SlaveZoneId          string           `position:"Query" name:"SlaveZoneId"`
}

// CreateLoadBalancerProResponse is the response struct for api CreateLoadBalancerPro
type CreateLoadBalancerProResponse struct {
	*responses.BaseResponse
	RequestId        string `json:"RequestId" xml:"RequestId"`
	LoadBalancerId   string `json:"LoadBalancerId" xml:"LoadBalancerId"`
	Address          string `json:"Address" xml:"Address"`
	LoadBalancerName string `json:"LoadBalancerName" xml:"LoadBalancerName"`
	VpcId            string `json:"VpcId" xml:"VpcId"`
	VSwitchId        string `json:"VSwitchId" xml:"VSwitchId"`
	NetworkType      string `json:"NetworkType" xml:"NetworkType"`
}

// CreateCreateLoadBalancerProRequest creates a request to invoke CreateLoadBalancerPro API
func CreateCreateLoadBalancerProRequest() (request *CreateLoadBalancerProRequest) {
	request = &CreateLoadBalancerProRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Slb", "2014-05-15", "CreateLoadBalancerPro", "slb", "openAPI")
	return
}

// CreateCreateLoadBalancerProResponse creates a response to parse from CreateLoadBalancerPro response
func CreateCreateLoadBalancerProResponse() (response *CreateLoadBalancerProResponse) {
	response = &CreateLoadBalancerProResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
