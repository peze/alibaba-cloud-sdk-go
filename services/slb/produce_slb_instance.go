package slb

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// ProduceSlbInstance invokes the slb.ProduceSlbInstance API synchronously
// api document: https://help.aliyun.com/api/slb/produceslbinstance.html
func (client *Client) ProduceSlbInstance(request *ProduceSlbInstanceRequest) (response *ProduceSlbInstanceResponse, err error) {
	response = CreateProduceSlbInstanceResponse()
	err = client.DoAction(request, response)
	return
}

// ProduceSlbInstanceWithChan invokes the slb.ProduceSlbInstance API asynchronously
// api document: https://help.aliyun.com/api/slb/produceslbinstance.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ProduceSlbInstanceWithChan(request *ProduceSlbInstanceRequest) (<-chan *ProduceSlbInstanceResponse, <-chan error) {
	responseChan := make(chan *ProduceSlbInstanceResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ProduceSlbInstance(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// ProduceSlbInstanceWithCallback invokes the slb.ProduceSlbInstance API asynchronously
// api document: https://help.aliyun.com/api/slb/produceslbinstance.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ProduceSlbInstanceWithCallback(request *ProduceSlbInstanceRequest, callback func(response *ProduceSlbInstanceResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ProduceSlbInstanceResponse
		var err error
		defer close(result)
		response, err = client.ProduceSlbInstance(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// ProduceSlbInstanceRequest is the request struct for api ProduceSlbInstance
type ProduceSlbInstanceRequest struct {
	*requests.RpcRequest
	AccessKeyId          string           `position:"Query" name:"access_key_id"`
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	Data                 string           `position:"Query" name:"data"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount         string           `position:"Query" name:"OwnerAccount"`
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
}

// ProduceSlbInstanceResponse is the response struct for api ProduceSlbInstance
type ProduceSlbInstanceResponse struct {
	*responses.BaseResponse
	RequestId string `json:"requestId" xml:"requestId"`
	Data      string `json:"data" xml:"data"`
	Code      string `json:"code" xml:"code"`
	Success   bool   `json:"success" xml:"success"`
	Message   string `json:"message" xml:"message"`
}

// CreateProduceSlbInstanceRequest creates a request to invoke ProduceSlbInstance API
func CreateProduceSlbInstanceRequest() (request *ProduceSlbInstanceRequest) {
	request = &ProduceSlbInstanceRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Slb", "2014-05-15", "ProduceSlbInstance", "slb", "openAPI")
	return
}

// CreateProduceSlbInstanceResponse creates a response to parse from ProduceSlbInstance response
func CreateProduceSlbInstanceResponse() (response *ProduceSlbInstanceResponse) {
	response = &ProduceSlbInstanceResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
