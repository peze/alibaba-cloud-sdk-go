package slb

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// SetLogsDownloadStatus invokes the slb.SetLogsDownloadStatus API synchronously
// api document: https://help.aliyun.com/api/slb/setlogsdownloadstatus.html
func (client *Client) SetLogsDownloadStatus(request *SetLogsDownloadStatusRequest) (response *SetLogsDownloadStatusResponse, err error) {
	response = CreateSetLogsDownloadStatusResponse()
	err = client.DoAction(request, response)
	return
}

// SetLogsDownloadStatusWithChan invokes the slb.SetLogsDownloadStatus API asynchronously
// api document: https://help.aliyun.com/api/slb/setlogsdownloadstatus.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) SetLogsDownloadStatusWithChan(request *SetLogsDownloadStatusRequest) (<-chan *SetLogsDownloadStatusResponse, <-chan error) {
	responseChan := make(chan *SetLogsDownloadStatusResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.SetLogsDownloadStatus(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// SetLogsDownloadStatusWithCallback invokes the slb.SetLogsDownloadStatus API asynchronously
// api document: https://help.aliyun.com/api/slb/setlogsdownloadstatus.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) SetLogsDownloadStatusWithCallback(request *SetLogsDownloadStatusRequest, callback func(response *SetLogsDownloadStatusResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *SetLogsDownloadStatusResponse
		var err error
		defer close(result)
		response, err = client.SetLogsDownloadStatus(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// SetLogsDownloadStatusRequest is the request struct for api SetLogsDownloadStatus
type SetLogsDownloadStatusRequest struct {
	*requests.RpcRequest
	AccessKeyId          string           `position:"Query" name:"access_key_id"`
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount         string           `position:"Query" name:"OwnerAccount"`
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
	LogsDownloadStatus   string           `position:"Query" name:"LogsDownloadStatus"`
	Tags                 string           `position:"Query" name:"Tags"`
}

// SetLogsDownloadStatusResponse is the response struct for api SetLogsDownloadStatus
type SetLogsDownloadStatusResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
}

// CreateSetLogsDownloadStatusRequest creates a request to invoke SetLogsDownloadStatus API
func CreateSetLogsDownloadStatusRequest() (request *SetLogsDownloadStatusRequest) {
	request = &SetLogsDownloadStatusRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Slb", "2014-05-15", "SetLogsDownloadStatus", "slb", "openAPI")
	return
}

// CreateSetLogsDownloadStatusResponse creates a response to parse from SetLogsDownloadStatus response
func CreateSetLogsDownloadStatusResponse() (response *SetLogsDownloadStatusResponse) {
	response = &SetLogsDownloadStatusResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
