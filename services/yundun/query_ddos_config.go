
package yundun

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// QueryDdosConfig invokes the yundun.QueryDdosConfig API synchronously
// api document: https://help.aliyun.com/api/yundun/queryddosconfig.html
func (client *Client) QueryDdosConfig(request *QueryDdosConfigRequest) (response *QueryDdosConfigResponse, err error) {
response = CreateQueryDdosConfigResponse()
err = client.DoAction(request, response)
return
}

// QueryDdosConfigWithChan invokes the yundun.QueryDdosConfig API asynchronously
// api document: https://help.aliyun.com/api/yundun/queryddosconfig.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) QueryDdosConfigWithChan(request *QueryDdosConfigRequest) (<-chan *QueryDdosConfigResponse, <-chan error) {
responseChan := make(chan *QueryDdosConfigResponse, 1)
errChan := make(chan error, 1)
err := client.AddAsyncTask(func() {
defer close(responseChan)
defer close(errChan)
response, err :=  client.QueryDdosConfig(request)
if err != nil {
errChan <- err
} else {
responseChan <- response
}
})
if err != nil {
errChan <- err
close(responseChan)
close(errChan)
}
return responseChan, errChan
}

// QueryDdosConfigWithCallback invokes the yundun.QueryDdosConfig API asynchronously
// api document: https://help.aliyun.com/api/yundun/queryddosconfig.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) QueryDdosConfigWithCallback(request *QueryDdosConfigRequest, callback func(response *QueryDdosConfigResponse, err error)) (<-chan int) {
result := make(chan int, 1)
err := client.AddAsyncTask(func() {
var response *QueryDdosConfigResponse
var err error
defer close(result)
response, err = client.QueryDdosConfig(request)
callback(response, err)
result <- 1
})
if err != nil {
defer close(result)
callback(nil, err)
result <- 0
}
return result
}

// QueryDdosConfigRequest is the request struct for api QueryDdosConfig
type QueryDdosConfigRequest struct {
*requests.RpcRequest
                    InstanceId     string `position:"Query" name:"InstanceId"`
                    InstanceType     string `position:"Query" name:"InstanceType"`
}


// QueryDdosConfigResponse is the response struct for api QueryDdosConfig
type QueryDdosConfigResponse struct {
*responses.BaseResponse
            RequestId     string `json:"RequestId" xml:"RequestId"`
            Bps     int64 `json:"Bps" xml:"Bps"`
            Pps     int64 `json:"Pps" xml:"Pps"`
            Qps     int64 `json:"Qps" xml:"Qps"`
            Sipconn     int64 `json:"Sipconn" xml:"Sipconn"`
            Sipnew     int64 `json:"Sipnew" xml:"Sipnew"`
            Layer7Config     bool `json:"Layer7Config" xml:"Layer7Config"`
            FlowPosition     int `json:"FlowPosition" xml:"FlowPosition"`
            QpsPosition     int `json:"QpsPosition" xml:"QpsPosition"`
            StrategyPosition     int `json:"StrategyPosition" xml:"StrategyPosition"`
            Level     int `json:"Level" xml:"Level"`
            HoleBps     string `json:"HoleBps" xml:"HoleBps"`
            ConfigType     string `json:"ConfigType" xml:"ConfigType"`
}

// CreateQueryDdosConfigRequest creates a request to invoke QueryDdosConfig API
func CreateQueryDdosConfigRequest() (request *QueryDdosConfigRequest) {
request = &QueryDdosConfigRequest{
RpcRequest: &requests.RpcRequest{},
}
request.InitWithApiInfo("Yundun", "2015-04-16", "QueryDdosConfig", "yundun", "openAPI")
return
}

// CreateQueryDdosConfigResponse creates a response to parse from QueryDdosConfig response
func CreateQueryDdosConfigResponse() (response *QueryDdosConfigResponse) {
response = &QueryDdosConfigResponse{
BaseResponse: &responses.BaseResponse{},
}
return
}


