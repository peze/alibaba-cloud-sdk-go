
package rds

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// CreateAdminAccount invokes the rds.CreateAdminAccount API synchronously
// api document: https://help.aliyun.com/api/rds/createadminaccount.html
func (client *Client) CreateAdminAccount(request *CreateAdminAccountRequest) (response *CreateAdminAccountResponse, err error) {
response = CreateCreateAdminAccountResponse()
err = client.DoAction(request, response)
return
}

// CreateAdminAccountWithChan invokes the rds.CreateAdminAccount API asynchronously
// api document: https://help.aliyun.com/api/rds/createadminaccount.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateAdminAccountWithChan(request *CreateAdminAccountRequest) (<-chan *CreateAdminAccountResponse, <-chan error) {
responseChan := make(chan *CreateAdminAccountResponse, 1)
errChan := make(chan error, 1)
err := client.AddAsyncTask(func() {
defer close(responseChan)
defer close(errChan)
response, err :=  client.CreateAdminAccount(request)
if err != nil {
errChan <- err
} else {
responseChan <- response
}
})
if err != nil {
errChan <- err
close(responseChan)
close(errChan)
}
return responseChan, errChan
}

// CreateAdminAccountWithCallback invokes the rds.CreateAdminAccount API asynchronously
// api document: https://help.aliyun.com/api/rds/createadminaccount.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateAdminAccountWithCallback(request *CreateAdminAccountRequest, callback func(response *CreateAdminAccountResponse, err error)) (<-chan int) {
result := make(chan int, 1)
err := client.AddAsyncTask(func() {
var response *CreateAdminAccountResponse
var err error
defer close(result)
response, err = client.CreateAdminAccount(request)
callback(response, err)
result <- 1
})
if err != nil {
defer close(result)
callback(nil, err)
result <- 0
}
return result
}

// CreateAdminAccountRequest is the request struct for api CreateAdminAccount
type CreateAdminAccountRequest struct {
*requests.RpcRequest
                    AccountType     string `position:"Query" name:"AccountType"`
                    AccountDescription     string `position:"Query" name:"AccountDescription"`
                    AccountPassword     string `position:"Query" name:"AccountPassword"`
                    AccountName     string `position:"Query" name:"AccountName"`
                    DBInstanceId     string `position:"Query" name:"DBInstanceId"`
}


// CreateAdminAccountResponse is the response struct for api CreateAdminAccount
type CreateAdminAccountResponse struct {
*responses.BaseResponse
            RequestId     string `json:"RequestId" xml:"RequestId"`
}

// CreateCreateAdminAccountRequest creates a request to invoke CreateAdminAccount API
func CreateCreateAdminAccountRequest() (request *CreateAdminAccountRequest) {
request = &CreateAdminAccountRequest{
RpcRequest: &requests.RpcRequest{},
}
request.InitWithApiInfo("Rds", "2014-08-15", "CreateAdminAccount", "", "")
return
}

// CreateCreateAdminAccountResponse creates a response to parse from CreateAdminAccount response
func CreateCreateAdminAccountResponse() (response *CreateAdminAccountResponse) {
response = &CreateAdminAccountResponse{
BaseResponse: &responses.BaseResponse{},
}
return
}


