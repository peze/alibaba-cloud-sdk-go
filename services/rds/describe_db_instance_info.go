
package rds

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeDBInstanceInfo invokes the rds.DescribeDBInstanceInfo API synchronously
// api document: https://help.aliyun.com/api/rds/describedbinstanceinfo.html
func (client *Client) DescribeDBInstanceInfo(request *DescribeDBInstanceInfoRequest) (response *DescribeDBInstanceInfoResponse, err error) {
response = CreateDescribeDBInstanceInfoResponse()
err = client.DoAction(request, response)
return
}

// DescribeDBInstanceInfoWithChan invokes the rds.DescribeDBInstanceInfo API asynchronously
// api document: https://help.aliyun.com/api/rds/describedbinstanceinfo.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeDBInstanceInfoWithChan(request *DescribeDBInstanceInfoRequest) (<-chan *DescribeDBInstanceInfoResponse, <-chan error) {
responseChan := make(chan *DescribeDBInstanceInfoResponse, 1)
errChan := make(chan error, 1)
err := client.AddAsyncTask(func() {
defer close(responseChan)
defer close(errChan)
response, err :=  client.DescribeDBInstanceInfo(request)
if err != nil {
errChan <- err
} else {
responseChan <- response
}
})
if err != nil {
errChan <- err
close(responseChan)
close(errChan)
}
return responseChan, errChan
}

// DescribeDBInstanceInfoWithCallback invokes the rds.DescribeDBInstanceInfo API asynchronously
// api document: https://help.aliyun.com/api/rds/describedbinstanceinfo.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeDBInstanceInfoWithCallback(request *DescribeDBInstanceInfoRequest, callback func(response *DescribeDBInstanceInfoResponse, err error)) (<-chan int) {
result := make(chan int, 1)
err := client.AddAsyncTask(func() {
var response *DescribeDBInstanceInfoResponse
var err error
defer close(result)
response, err = client.DescribeDBInstanceInfo(request)
callback(response, err)
result <- 1
})
if err != nil {
defer close(result)
callback(nil, err)
result <- 0
}
return result
}

// DescribeDBInstanceInfoRequest is the request struct for api DescribeDBInstanceInfo
type DescribeDBInstanceInfoRequest struct {
*requests.RpcRequest
                    AddressPort     string `position:"Query" name:"AddressPort"`
                    ResourceOwnerId     requests.Integer `position:"Query" name:"ResourceOwnerId"`
                    ClientToken     string `position:"Query" name:"ClientToken"`
                    DBInstanceId     string `position:"Query" name:"DBInstanceId"`
                    ResourceOwnerAccount     string `position:"Query" name:"ResourceOwnerAccount"`
                    OwnerId     requests.Integer `position:"Query" name:"OwnerId"`
                    AddressIP     string `position:"Query" name:"AddressIP"`
}


// DescribeDBInstanceInfoResponse is the response struct for api DescribeDBInstanceInfo
type DescribeDBInstanceInfoResponse struct {
*responses.BaseResponse
            RequestId     string `json:"RequestId" xml:"RequestId"`
            DBInstanceId     string `json:"DBInstanceId" xml:"DBInstanceId"`
            RegionId     string `json:"RegionId" xml:"RegionId"`
            ConnectionString     string `json:"ConnectionString" xml:"ConnectionString"`
            Port     string `json:"Port" xml:"Port"`
            MasterHostIp     string `json:"MasterHostIp" xml:"MasterHostIp"`
            MasterHostPort     string `json:"MasterHostPort" xml:"MasterHostPort"`
            SlaveHostIp     string `json:"SlaveHostIp" xml:"SlaveHostIp"`
            SlaveHostPort     string `json:"SlaveHostPort" xml:"SlaveHostPort"`
            MasterInstanceId     string `json:"MasterInstanceId" xml:"MasterInstanceId"`
            SlaveInstanceId     string `json:"SlaveInstanceId" xml:"SlaveInstanceId"`
            ReadWriteType     string `json:"ReadWriteType" xml:"ReadWriteType"`
                    ConnectionIPs ConnectionIPs `json:"ConnectionIPs" xml:"ConnectionIPs"`
}

// CreateDescribeDBInstanceInfoRequest creates a request to invoke DescribeDBInstanceInfo API
func CreateDescribeDBInstanceInfoRequest() (request *DescribeDBInstanceInfoRequest) {
request = &DescribeDBInstanceInfoRequest{
RpcRequest: &requests.RpcRequest{},
}
request.InitWithApiInfo("Rds", "2014-08-15", "DescribeDBInstanceInfo", "", "")
return
}

// CreateDescribeDBInstanceInfoResponse creates a response to parse from DescribeDBInstanceInfo response
func CreateDescribeDBInstanceInfoResponse() (response *DescribeDBInstanceInfoResponse) {
response = &DescribeDBInstanceInfoResponse{
BaseResponse: &responses.BaseResponse{},
}
return
}


