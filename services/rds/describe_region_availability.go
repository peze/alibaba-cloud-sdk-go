
package rds

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeRegionAvailability invokes the rds.DescribeRegionAvailability API synchronously
// api document: https://help.aliyun.com/api/rds/describeregionavailability.html
func (client *Client) DescribeRegionAvailability(request *DescribeRegionAvailabilityRequest) (response *DescribeRegionAvailabilityResponse, err error) {
response = CreateDescribeRegionAvailabilityResponse()
err = client.DoAction(request, response)
return
}

// DescribeRegionAvailabilityWithChan invokes the rds.DescribeRegionAvailability API asynchronously
// api document: https://help.aliyun.com/api/rds/describeregionavailability.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeRegionAvailabilityWithChan(request *DescribeRegionAvailabilityRequest) (<-chan *DescribeRegionAvailabilityResponse, <-chan error) {
responseChan := make(chan *DescribeRegionAvailabilityResponse, 1)
errChan := make(chan error, 1)
err := client.AddAsyncTask(func() {
defer close(responseChan)
defer close(errChan)
response, err :=  client.DescribeRegionAvailability(request)
if err != nil {
errChan <- err
} else {
responseChan <- response
}
})
if err != nil {
errChan <- err
close(responseChan)
close(errChan)
}
return responseChan, errChan
}

// DescribeRegionAvailabilityWithCallback invokes the rds.DescribeRegionAvailability API asynchronously
// api document: https://help.aliyun.com/api/rds/describeregionavailability.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeRegionAvailabilityWithCallback(request *DescribeRegionAvailabilityRequest, callback func(response *DescribeRegionAvailabilityResponse, err error)) (<-chan int) {
result := make(chan int, 1)
err := client.AddAsyncTask(func() {
var response *DescribeRegionAvailabilityResponse
var err error
defer close(result)
response, err = client.DescribeRegionAvailability(request)
callback(response, err)
result <- 1
})
if err != nil {
defer close(result)
callback(nil, err)
result <- 0
}
return result
}

// DescribeRegionAvailabilityRequest is the request struct for api DescribeRegionAvailability
type DescribeRegionAvailabilityRequest struct {
*requests.RpcRequest
                    ResourceOwnerId     requests.Integer `position:"Query" name:"ResourceOwnerId"`
                    HostType     string `position:"Query" name:"HostType"`
                    SpecifyCount     string `position:"Query" name:"SpecifyCount"`
                    DBInstanceId     string `position:"Query" name:"DBInstanceId"`
                    ResourceOwnerAccount     string `position:"Query" name:"ResourceOwnerAccount"`
                    OwnerId     requests.Integer `position:"Query" name:"OwnerId"`
                    InstanceUsedType     string `position:"Query" name:"InstanceUsedType"`
}


// DescribeRegionAvailabilityResponse is the response struct for api DescribeRegionAvailability
type DescribeRegionAvailabilityResponse struct {
*responses.BaseResponse
            RequestId     string `json:"RequestId" xml:"RequestId"`
                    Items ItemsInDescribeRegionAvailability `json:"Items" xml:"Items"`
}

// CreateDescribeRegionAvailabilityRequest creates a request to invoke DescribeRegionAvailability API
func CreateDescribeRegionAvailabilityRequest() (request *DescribeRegionAvailabilityRequest) {
request = &DescribeRegionAvailabilityRequest{
RpcRequest: &requests.RpcRequest{},
}
request.InitWithApiInfo("Rds", "2014-08-15", "DescribeRegionAvailability", "", "")
return
}

// CreateDescribeRegionAvailabilityResponse creates a response to parse from DescribeRegionAvailability response
func CreateDescribeRegionAvailabilityResponse() (response *DescribeRegionAvailabilityResponse) {
response = &DescribeRegionAvailabilityResponse{
BaseResponse: &responses.BaseResponse{},
}
return
}


