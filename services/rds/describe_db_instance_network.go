package rds

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeDBInstanceNetwork invokes the rds.DescribeDBInstanceNetwork API synchronously
// api document: https://help.aliyun.com/api/rds/describedbinstancenetwork.html
func (client *Client) DescribeDBInstanceNetwork(request *DescribeDBInstanceNetworkRequest) (response *DescribeDBInstanceNetworkResponse, err error) {
	response = CreateDescribeDBInstanceNetworkResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeDBInstanceNetworkWithChan invokes the rds.DescribeDBInstanceNetwork API asynchronously
// api document: https://help.aliyun.com/api/rds/describedbinstancenetwork.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeDBInstanceNetworkWithChan(request *DescribeDBInstanceNetworkRequest) (<-chan *DescribeDBInstanceNetworkResponse, <-chan error) {
	responseChan := make(chan *DescribeDBInstanceNetworkResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeDBInstanceNetwork(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeDBInstanceNetworkWithCallback invokes the rds.DescribeDBInstanceNetwork API asynchronously
// api document: https://help.aliyun.com/api/rds/describedbinstancenetwork.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeDBInstanceNetworkWithCallback(request *DescribeDBInstanceNetworkRequest, callback func(response *DescribeDBInstanceNetworkResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeDBInstanceNetworkResponse
		var err error
		defer close(result)
		response, err = client.DescribeDBInstanceNetwork(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeDBInstanceNetworkRequest is the request struct for api DescribeDBInstanceNetwork
type DescribeDBInstanceNetworkRequest struct {
	*requests.RpcRequest
	EndTime      string `position:"Query" name:"EndTime"`
	DBInstanceId string `position:"Query" name:"DBInstanceId"`
	StartTime    string `position:"Query" name:"StartTime"`
}

// DescribeDBInstanceNetworkResponse is the response struct for api DescribeDBInstanceNetwork
type DescribeDBInstanceNetworkResponse struct {
	*responses.BaseResponse
	RequestId    string   `json:"RequestId" xml:"RequestId"`
	DBInstanceId string   `json:"DBInstanceId" xml:"DBInstanceId"`
	StartTime    string   `json:"StartTime" xml:"StartTime"`
	EndTime      string   `json:"EndTime" xml:"EndTime"`
	Topology     Topology `json:"Topology" xml:"Topology"`
}

// CreateDescribeDBInstanceNetworkRequest creates a request to invoke DescribeDBInstanceNetwork API
func CreateDescribeDBInstanceNetworkRequest() (request *DescribeDBInstanceNetworkRequest) {
	request = &DescribeDBInstanceNetworkRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Rds", "2014-08-15", "DescribeDBInstanceNetwork", "", "")
	return
}

// CreateDescribeDBInstanceNetworkResponse creates a response to parse from DescribeDBInstanceNetwork response
func CreateDescribeDBInstanceNetworkResponse() (response *DescribeDBInstanceNetworkResponse) {
	response = &DescribeDBInstanceNetworkResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
