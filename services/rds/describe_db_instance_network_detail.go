
package rds

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeDBInstanceNetworkDetail invokes the rds.DescribeDBInstanceNetworkDetail API synchronously
// api document: https://help.aliyun.com/api/rds/describedbinstancenetworkdetail.html
func (client *Client) DescribeDBInstanceNetworkDetail(request *DescribeDBInstanceNetworkDetailRequest) (response *DescribeDBInstanceNetworkDetailResponse, err error) {
response = CreateDescribeDBInstanceNetworkDetailResponse()
err = client.DoAction(request, response)
return
}

// DescribeDBInstanceNetworkDetailWithChan invokes the rds.DescribeDBInstanceNetworkDetail API asynchronously
// api document: https://help.aliyun.com/api/rds/describedbinstancenetworkdetail.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeDBInstanceNetworkDetailWithChan(request *DescribeDBInstanceNetworkDetailRequest) (<-chan *DescribeDBInstanceNetworkDetailResponse, <-chan error) {
responseChan := make(chan *DescribeDBInstanceNetworkDetailResponse, 1)
errChan := make(chan error, 1)
err := client.AddAsyncTask(func() {
defer close(responseChan)
defer close(errChan)
response, err :=  client.DescribeDBInstanceNetworkDetail(request)
if err != nil {
errChan <- err
} else {
responseChan <- response
}
})
if err != nil {
errChan <- err
close(responseChan)
close(errChan)
}
return responseChan, errChan
}

// DescribeDBInstanceNetworkDetailWithCallback invokes the rds.DescribeDBInstanceNetworkDetail API asynchronously
// api document: https://help.aliyun.com/api/rds/describedbinstancenetworkdetail.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeDBInstanceNetworkDetailWithCallback(request *DescribeDBInstanceNetworkDetailRequest, callback func(response *DescribeDBInstanceNetworkDetailResponse, err error)) (<-chan int) {
result := make(chan int, 1)
err := client.AddAsyncTask(func() {
var response *DescribeDBInstanceNetworkDetailResponse
var err error
defer close(result)
response, err = client.DescribeDBInstanceNetworkDetail(request)
callback(response, err)
result <- 1
})
if err != nil {
defer close(result)
callback(nil, err)
result <- 0
}
return result
}

// DescribeDBInstanceNetworkDetailRequest is the request struct for api DescribeDBInstanceNetworkDetail
type DescribeDBInstanceNetworkDetailRequest struct {
*requests.RpcRequest
                    StartPoint     string `position:"Query" name:"StartPoint"`
                    EndTime     string `position:"Query" name:"EndTime"`
                    StartTime     string `position:"Query" name:"StartTime"`
                    EndPoint     string `position:"Query" name:"EndPoint"`
                    DBInstanceId     string `position:"Query" name:"DBInstanceId"`
}


// DescribeDBInstanceNetworkDetailResponse is the response struct for api DescribeDBInstanceNetworkDetail
type DescribeDBInstanceNetworkDetailResponse struct {
*responses.BaseResponse
            RequestId     string `json:"RequestId" xml:"RequestId"`
            DBInstanceId     string `json:"DBInstanceId" xml:"DBInstanceId"`
            StartTime     string `json:"StartTime" xml:"StartTime"`
            EndTime     string `json:"EndTime" xml:"EndTime"`
            NewConnection     string `json:"NewConnection" xml:"NewConnection"`
            ActiveConnection     string `json:"ActiveConnection" xml:"ActiveConnection"`
            AbortedConnection     string `json:"AbortedConnection" xml:"AbortedConnection"`
            NetworkRequest     string `json:"NetworkRequest" xml:"NetworkRequest"`
            NetworkTrafficIn     string `json:"NetworkTrafficIn" xml:"NetworkTrafficIn"`
            NetworkTrafficOut     string `json:"NetworkTrafficOut" xml:"NetworkTrafficOut"`
            NetworkLatency     string `json:"NetworkLatency" xml:"NetworkLatency"`
            BackendLatency     string `json:"BackendLatency" xml:"BackendLatency"`
            NetworkErrors     string `json:"NetworkErrors" xml:"NetworkErrors"`
                    NetworkDetail NetworkDetail `json:"NetworkDetail" xml:"NetworkDetail"`
}

// CreateDescribeDBInstanceNetworkDetailRequest creates a request to invoke DescribeDBInstanceNetworkDetail API
func CreateDescribeDBInstanceNetworkDetailRequest() (request *DescribeDBInstanceNetworkDetailRequest) {
request = &DescribeDBInstanceNetworkDetailRequest{
RpcRequest: &requests.RpcRequest{},
}
request.InitWithApiInfo("Rds", "2014-08-15", "DescribeDBInstanceNetworkDetail", "", "")
return
}

// CreateDescribeDBInstanceNetworkDetailResponse creates a response to parse from DescribeDBInstanceNetworkDetail response
func CreateDescribeDBInstanceNetworkDetailResponse() (response *DescribeDBInstanceNetworkDetailResponse) {
response = &DescribeDBInstanceNetworkDetailResponse{
BaseResponse: &responses.BaseResponse{},
}
return
}


